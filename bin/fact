#!/usr/bin/env ruby
#==============================================================================
# Copyright (C) 2019-present Alces Flight Ltd.
#
# This file is part of Flight Fact.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# Flight Fact is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with Flight Fact. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on Flight Fact, please visit:
# https://github.com/alces-flight/alces-flight/flight-fact
#==============================================================================

begin
  # Reads the environment setup
  ENV['BUNDLE_GEMFILE'] ||= File.join(__FILE__, '../../Gemfile')
  app_name = ENV.fetch('FLIGHT_PROGRAM_NAME', __FILE__)

  require 'rubygems'
  require 'bundler'
  Bundler.setup(:default)

  # Sets up the error handler and runs the remaining require
  require 'commander'
  Commander::ErrorHandler.new(app_name, false).start do |handler|
    # Enable trace back with --trace
    args = handler.parse_trace(*ARGV)

    # Loads the config
    require_relative '../lib/flight_fact/config'

    # Sets the application name
    FlightFact::Config::CACHE.app_name = app_name

    # Attempt to enable development mode if requested
    if FlightFact::Config::CACHE.development?
      begin
        Bundler.setup(:default, :development)
        require 'pry'
        require 'pry-byebug'
      rescue StandardError, LoadError
        Bundler.setup(:default)
        $stderr.puts "An error occurred when enabling development mode!"
      end
    end

    # Builds and runs the CLI
    require_relative '../lib/flight_fact/cli'

    Dir.chdir(ENV.fetch('FLIGHT_CWD','.'))
    OpenFlight.set_standard_env rescue nil
    FlightFact::CLI.run(*args)
  end
rescue Interrupt
  if Kernel.const_defined?(:Paint)
    $stderr.puts "\n#{Paint['WARNING', :underline, :yellow]}: Cancelled by user"
  else
    $stderr.puts "\nWARNING: Cancelled by user"
  end
  exit(130)
end

